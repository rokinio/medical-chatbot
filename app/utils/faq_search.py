import json
import faiss
import numpy as np
from sentence_transformers import SentenceTransformer

# Ø¨Ø§Ø±Ú¯Ø°Ø§Ø±ÛŒ Ù…Ø¯Ù„
model = SentenceTransformer("sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2")

# Ø¨Ø§Ø±Ú¯Ø°Ø§Ø±ÛŒ FAISS index Ùˆ Ù…ØªØ§Ø¯ÛŒØªØ§
index = faiss.read_index("faq_index.faiss")
with open("faq_metadata.json", "r", encoding="utf-8") as f:
    metadata = json.load(f)

def search_faq(query, top_k=3):
    # ØªØ¨Ø¯ÛŒÙ„ Ø³ÙˆØ§Ù„ ÙˆØ±ÙˆØ¯ÛŒ Ø¨Ù‡ embedding
    query_embedding = model.encode([query])

    # Ø¬Ø³ØªØ¬Ùˆ Ø¯Ø± FAISS
    distances, indices = index.search(np.array(query_embedding, dtype=np.float32), top_k)

    # Ù†Ù…Ø§ÛŒØ´ Ù†ØªØ§ÛŒØ¬
    results = [metadata["questions"][idx] for idx in indices[0] if idx < len(metadata["questions"])]
    return results

# ØªØ³Øª Ø¨Ø§Ø²ÛŒØ§Ø¨ÛŒ Ø³ÙˆØ§Ù„Ø§Øª
query = "Ú†Ú¯ÙˆÙ†Ù‡ Ø³Ù†Ú¯ Ú©Ù„ÛŒÙ‡ Ø±Ø§ Ø¯Ø±Ù…Ø§Ù† Ú©Ù†Ù…ØŸ"
related_questions = search_faq(query)

print("ðŸš€ Ù…Ø±ØªØ¨Ø·â€ŒØªØ±ÛŒÙ† Ø³ÙˆØ§Ù„Ø§Øª:")
for q in related_questions:
    print(f"- {q}")
